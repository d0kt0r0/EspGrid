//
//  EspBeat.m
//
//  This file is part of EspGrid.  EspGrid is (c) 2012,2013 by David Ogborn.
//
//  EspGrid is free software: you can redistribute it and/or modify
//  it under the terms of the GNU General Public License as published by
//  the Free Software Foundation, either version 3 of the License, or
//  (at your option) any later version.
//
//  EspGrid is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//  GNU General Public License for more details.
//
//  You should have received a copy of the GNU General Public License
//  along with EspGrid.  If not, see <http://www.gnu.org/licenses/>.

#import "EspBeat.h"
#import "EspGridDefs.h"

@implementation EspBeat
@synthesize udp;
@synthesize osc;
@synthesize clock;
@synthesize kvc;

@synthesize on;
@synthesize tempo;
@synthesize downbeatTime;
@synthesize downbeatNumber;
@synthesize cycleLength;

@synthesize tempNumber;


-(id) init
{
    self = [super init];
    [self setOn:[NSNumber numberWithBool:NO]];
    [self setTempo:[NSNumber numberWithDouble:120.0]];
    [self setCycleLength:[NSNumber numberWithInt:4]];
    [self setDownbeatTime:[NSNumber numberWithDouble:EspGridTime()]];
    [self setDownbeatNumber:[NSNumber numberWithInt:0]];
    beatsIssued = 0;
    return self;
}


-(void) turnBeatOn
{
    if([on boolValue]==YES) return;
    postLog(@"turning beat on", self);
    EspTimeType stamp = [clock currentAdjustedTime] + 0.1; // fixed 100ms latency compensation for now
    [kvc setValue:[NSNumber numberWithDouble:stamp] forKeyPath:@"beat.downbeatTime"];
    [kvc setValue:[NSNumber numberWithBool:YES] forKeyPath:@"beat.on"];
    [kvc setValue:[NSNumber numberWithLong:beatsIssued] forKeyPath:@"beat.downbeatNumber"];
}

-(void) turnBeatOff
{
    if([on boolValue]==NO) return;
    postLog(@"turning beat off",self);
    double beats = ([clock currentAdjustedTime] - [downbeatTime doubleValue])*[tempo doubleValue]/60.0;
    beatsIssued = (unsigned long)floor(beats)+[downbeatNumber longValue];
    [kvc setValue:[NSNumber numberWithBool:NO] forKeyPath:@"beat.on"];
}

-(void) changeTempo:(double)newBpm
{
    if([tempo doubleValue]==newBpm)return;
    if(newBpm<=0.0)newBpm=0.000000060;
    postLog([NSString stringWithFormat:@"changing tempo to %lf",newBpm],self);
    if(![on boolValue])
    {
        [kvc setValue:[NSNumber numberWithDouble:newBpm] forKeyPath:@"beat.tempo"];
    }
    else
    {
        double beats = ([clock currentAdjustedTime] - [downbeatTime doubleValue])*[tempo doubleValue]/60.0;
        beatsIssued = (unsigned long)floor(beats)+1;
        double newTime = [downbeatTime doubleValue] + (beatsIssued * 60.0/[tempo doubleValue]);
        unsigned long nextBeat = beatsIssued + [downbeatNumber longValue];
        [kvc setValue:[NSNumber numberWithDouble:newBpm] forKeyPath:@"beat.tempo"];
        [kvc setValue:[NSNumber numberWithDouble:newTime] forKeyPath:@"beat.downbeatTime"];
        [kvc setValue:[NSNumber numberWithLong:nextBeat] forKeyPath:@"beat.downbeatNumber"];
    }
}
    
// this needs to be reconsidered in light of recent changes to other things
-(void) changeCycleLength:(int)newLength
{
    if(newLength == [cycleLength intValue])return;
    postLog(@"changing cycle length",self);
    [kvc setValue:[NSNumber numberWithInt:newLength] forKeyPath:@"beat.cycleLength"];
}

-(BOOL) handleOsc:(NSString*)address withParameters:(NSArray*)d fromHost:(NSString*)h port:(int)p
{
    if([address isEqual:@"/esp/beat/on"]) 
    {
        if([d count]!=1){postProblem(@"received /esp/beat/on with wrong number of parameters",self); return NO;}
        else [osc logReceivedMessage:address fromHost:h port:p];
        int x = [[d objectAtIndex:0] intValue];
        if(x)[self turnBeatOn]; else [self turnBeatOff];
        return YES;
    }
    else if([address isEqual:@"/esp/beat/tempo"])
    {
        if([d count]!=1){postProblem(@"received /esp/beat/tempo with wrong number of parameters",self); return NO;}
        else [osc logReceivedMessage:address fromHost:h port:p];
        float x = [[d objectAtIndex:0] floatValue];
        [self changeTempo:x];
        return YES;
    }
    else if([address isEqual:@"/esp/beat/cycleLength"])
    {
        if([d count]!=1){postProblem(@"received /esp/beat/cycleLength with wrong number of parameters",self); return NO;}
        else [osc logReceivedMessage:address fromHost:h port:p];
        int x = [[d objectAtIndex:0] intValue];
        if(x<=0)x=1;
        [kvc setValue:[NSNumber numberWithInt:x] forKeyPath:@"beat.cycleLength"];
        return YES;
    }
    return NO;
}

@end
